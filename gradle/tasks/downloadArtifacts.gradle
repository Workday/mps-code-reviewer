repositories {
    maven {
          url "https://projects.itemis.de/nexus/content/groups/public"
    }
}

def mpsDownloadDir = new File('artifacts/MPS')
def mpsDownloadFile = new File(mpsDownloadDir, "MPS-${mpsBuild}.zip")
def eapSuffix = mpsBuild.contains("EAP") ? " EAP" : ""
def mpsUnpackedDir = new File(mpsDownloadDir, "MPS ${mpsMajor}${eapSuffix}")

task downloadMps(type: Download) {
  doFirst {
        if (!mpsDownloadDir.exists()) {
            ant.mkdir(dir: mpsDownloadDir)
        }
    }
    src "http://download.jetbrains.com/mps/${mpsMajor}/MPS-${mpsBuild}.zip"
    dest mpsDownloadFile
    overwrite false
}

task unzipMps(type: Copy, dependsOn: downloadMps) {
  from zipTree(mpsDownloadFile)
  into mpsDownloadDir
  doLast {
    println "MPS extracted to: " + mpsUnpackedDir
  }
}

// task unzipMPS(dependsOn: downloadMPS) {
//     inputs.file mpsDownloadFile
//     outputs.dir mpsDownloadDir

//     doLast {
//         ant.unzip src: mpsDownloadFile, dest: mpsDownloadDir
//     }
// }

task getMps(dependsOn: unzipMps)

// repositories {
//   maven {
//     url "https://artifactory.workday.com/artifactory/virtrelease"
//     credentials {
//       username = "${artifactory_user}"
//       password = "${artifactory_password}"
//     }
//   }
// }

configurations {
  mpsArtifacts
  deps
}

dependencies {
  mpsArtifacts "com.mbeddr:platform:1.0.+"
  // mps "com.jetbrains:mps:2017.3.5@zip"
  deps "com.google.code.gson:gson:2.8.0"
}

task resolveMpsArtifacts(type: Copy) {
  from {
    configurations.mpsArtifacts.resolve().collect { zipTree(it) }
  }
  into new File(rootDir, 'artifacts')
}

// task resolveMps(type: Copy) {
//   from {
//     configurations.mps.resolve().collect { zipTree(it) }
//   }
//   into new File(rootDir, 'artifacts/MPS')
// }

// task resolveDependencies(type: Sync) {
//   from configurations.deps
//   into new File(rootDir, 'artifacts/yp')
//   rename "(.*)-[0-9.]*\\.(.*)", '$1.$2' // Removes the version number
// }

// task resolveAllArtifacts(dependsOn: [resolveMpsArtifacts, resolveMps, resolveDependencies])
