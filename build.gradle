// Build script for MpsCodeReview

/*
Things to add to an MPS Gradle plugin:

- Library dependencies (i.e. mbeddr is used as a library for this project, have gradle download & configure the MPS project for that)
- MPS ANT script execution (clean, generate, build, test, others?)
- Solution dependency management?
- Project structure? (Solutions, etc)
*/

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'org.apache.ant:ant-junit:1.9.7'
  }
}

plugins {
  id "base"
  id "de.undercouch.download" version "3.4.2"
}

ext {
  // Define MPS download properties
  mps = new Expando(
    major: "2017.3",
    build: "2017.3.5",
    downloadDir: "artifacts/MPS"
  )
}

apply plugin: 'base'
apply from: file('gradle/tasks/mpsArtifact.gradle')

repositories {
  maven {
    mavenCentral()
    url "https://projects.itemis.de/nexus/content/groups/OS/"
  }
}

configurations {
  mpsPlugins
  com_workday_mps_reviewCompile
  com_workday_mps_review_git4mpsCompile
}

dependencies {
  // Plugin dependencies for project
  mpsPlugins "com.mbeddr:platform:1.0.20107.+"

  // Compile-time dependencies
  com_workday_mps_reviewCompile "com.google.code.gson:gson:2.8.0"
  com_workday_mps_reviewCompile "org.apache.httpcomponents:httpcore:4.4.9"
  com_workday_mps_reviewCompile "org.apache.httpcomponents:httpclient:4.5.5"

  com_workday_mps_review_git4mpsCompile files(mps.downloadDir + "/MPS ${mps.major}/plugins/git4idea/lib/git4idea.jar")
  com_workday_mps_review_git4mpsCompile files(mps.downloadDir + "/MPS ${mps.major}/plugins/git4idea/lib/git4idea-rt.jar")
}

task unzipPlugins(type: Copy) {
  from configurations.mpsPlugins.resolve().collect { zipTree(it) }
  into 'plugins'
}

task getPlugins(dependsOn: unzipPlugins)

task com_workday_mps_reviewCompileDependencies(type: Copy) {
  from configurations.com_workday_mps_reviewCompile.resolve()
  into 'solutions/com.workday.mps.review/lib'
}

task com_workday_mps_review_git4mpsCompileDependencies(type: Copy) {
  from configurations.com_workday_mps_review_git4mpsCompile.resolve()
  into 'solutions/com.workday.mps.review.git4mps/lib'
}

task setup(group: "Project",
           description: "Initializes the project for development",
           dependsOn: [getMps, 
                       getPlugins, 
                       com_workday_mps_reviewCompileDependencies, 
                       com_workday_mps_review_git4mpsCompileDependencies])


clean.doFirst {
    delete "${rootDir}/artifacts/"
    delete "${rootDir}/dist/"
    delete "${rootDir}/test/"

    // delete all generated code
    ant.delete(includeemptydirs: true) {
      fileset(dir: "${rootDir}", defaultexcludes: false) {
        include(name: "**/source_gen/**")
        include(name: "**/source_gen.caches/**")
        include(name: "**/classes_gen/**")
        include(name: "**/classes_gen.caches/**")
        include(name: "**/test_gen/**")
        include(name: "**/test_gen.caches/**")
      }
    }
}

// task generateBuildScripts(description: "Generates all Ant build scripts",
//                           group: "MPS Build",
//                           dependsOn: setup) << {
//   println "Generating Ant Build Scripts ============================="
//   execAndFailIfTextFound ANT_FAILURE, "ant", "-buildfile", "${rootDir}/buildscripts/allBuildScripts.xml", "generate"
//   println "Build Script Generation Completed ############################"
//   println()
// }